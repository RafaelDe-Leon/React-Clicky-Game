{"version":3,"sources":["components/PokemonCard/PokemonCard.js","components/Wrapper/wrapper.js","components/Title/index.js","components/NavBar/index.js","App.js","index.js"],"names":["PokemonCard","props","className","alt","name","src","image","onClick","handlePicked","id","Wrapper","shakeWrapper","children","Title","Navbar","href","App","state","pokemon","clickedPokemon","topScore","score","message","shakeit","shuffledArray","shuffleArray","setState","includes","concat","picturesArray","i","length","j","Math","floor","random","this","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"q5CAiBeA,G,MAdK,SAAAC,GAClB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBACEC,IAAKF,EAAMG,KACXC,IAAKJ,EAAMK,MACXC,QAAS,kBAAMN,EAAMO,aAAaP,EAAMQ,W,MCCnCC,MARf,SAAiBT,GACf,OACE,yBAAKC,UAAkC,SAAvBD,EAAMU,aAA0B,eAAiB,WAC9DV,EAAMW,W,MCCEC,MAJf,SAAeZ,GACb,OAAO,wBAAIC,UAAU,aAAaD,EAAMW,W,aCa3BE,MAdf,SAAgBb,GACd,OACE,yBAAKC,UAAU,+CACb,uBAAGA,UAAU,eAAea,KAAK,cAAjC,uBAIA,yBAAKb,UAAU,2BAA2BO,GAAG,aAC3C,wBAAIP,UAAU,kBC4EPc,G,iNA7EbC,MAAQ,CACNC,UACAC,eAAgB,GAChBC,SAAU,EACVC,MAAO,EACPC,QAAS,GACTC,QAAS,S,EAGXf,aAAe,SAAAC,GACb,IAAMe,EAAgB,EAAKC,aAAaP,GACxC,EAAKQ,SAAS,CAAER,QAASM,IAErB,EAAKP,MAAME,eAAeQ,SAASlB,GACrC,EAAKiB,SAAS,CACZL,MAAO,EACPF,eAAgB,GAChBG,QAAS,oDACTC,QAAS,SAGX,EAAKG,SAAS,CACZP,eAAgB,EAAKF,MAAME,eAAeS,OAAOnB,GACjDY,MAAO,EAAKJ,MAAMI,MAAQ,EAC1BC,QAAS,YACTC,QAAS,UAIT,EAAKN,MAAMI,OAAS,EAAKJ,MAAMG,UACjC,EAAKM,SAAS,CAAEN,SAAU,EAAKH,MAAMI,S,EAIzCI,aAAe,SAAAI,GACb,IAAK,IAAIC,EAAID,EAAcE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACjD,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADO,EAEV,CACrCD,EAAcG,GACdH,EAAcC,IAFfD,EAAcC,GAFkC,KAE9BD,EAAcG,GAFgB,KAOnD,OAAOH,G,wEAIC,IAAD,OACP,OACE,kBAAC,EAAD,CAASlB,aAAcyB,KAAKnB,MAAMM,SAChC,kBAAC,EAAD,MACA,kBAAC,EAAD,+EAIA,uBAAGrB,UAAU,SACX,0CACUkC,KAAKnB,MAAMI,MADrB,gBACyCe,KAAKnB,MAAMG,WAGtD,uBAAGlB,UAAU,WACX,gCAASkC,KAAKnB,MAAMK,UAGrBc,KAAKnB,MAAMC,QAAQmB,KAAI,SAAAnB,GAAO,OAC7B,kBAAC,EAAD,CACEV,aAAc,EAAKA,aACnBC,GAAIS,EAAQT,GACZ6B,IAAKpB,EAAQT,GACbL,KAAMc,EAAQd,KACdE,MAAOY,EAAQZ,gB,GAvETiC,c,MCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d06ab0e4.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\nconst PokemonCard = props => {\n  return (\n    <div className='card'>\n      <div className='img-container'>\n        <img\n          alt={props.name}\n          src={props.image}\n          onClick={() => props.handlePicked(props.id)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default PokemonCard;\n","import React from 'react';\nimport './style.css';\n\nfunction Wrapper(props) {\n  return (\n    <div className={props.shakeWrapper === 'true' ? 'wrapperShake' : 'wrapper'}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Wrapper;\n","import React from 'react';\nimport './style.css';\n\nfunction Title(props) {\n  return <h1 className='jumbotron'>{props.children}</h1>;\n}\n\nexport default Title;\n","import React from 'react';\nimport './style.css';\n\nfunction Navbar(props) {\n  return (\n    <nav className='navbar navbar-expand-lg navbar-dark bg-dark'>\n      <a className='navbar-brand' href='index.html'>\n        Pokemon Clicky Game\n      </a>\n\n      <div className='collapse navbar-collapse' id='navbarNav'>\n        <ul className='navbar-nav'></ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport PokemonCard from './components/PokemonCard/PokemonCard';\nimport Wrapper from './components/Wrapper/wrapper';\nimport Title from './components/Title';\nimport pokemon from './pokemon.json';\nimport Navbar from './components/NavBar';\nimport style from './app.css';\n\nclass App extends Component {\n  // Setting this.state.pokemon to the pokemon json array\n  state = {\n    pokemon,\n    clickedPokemon: [],\n    topScore: 0,\n    score: 0,\n    message: '',\n    shakeit: 'false'\n  };\n\n  handlePicked = id => {\n    const shuffledArray = this.shuffleArray(pokemon);\n    this.setState({ pokemon: shuffledArray });\n\n    if (this.state.clickedPokemon.includes(id)) {\n      this.setState({\n        score: 0,\n        clickedPokemon: [],\n        message: 'Incorrect!! Game Over, Click Pokemon to try again',\n        shakeit: 'true'\n      });\n    } else {\n      this.setState({\n        clickedPokemon: this.state.clickedPokemon.concat(id),\n        score: this.state.score + 1,\n        message: 'Correct!!',\n        shakeit: 'false'\n      });\n    }\n\n    if (this.state.score >= this.state.topScore) {\n      this.setState({ topScore: this.state.score });\n    }\n  };\n\n  shuffleArray = picturesArray => {\n    for (let i = picturesArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [picturesArray[i], picturesArray[j]] = [\n        picturesArray[j],\n        picturesArray[i]\n      ];\n    }\n    return picturesArray;\n  };\n\n  // Map over this.state.pokemon and render a PokemonCard component for each pokemon object\n  render() {\n    return (\n      <Wrapper shakeWrapper={this.state.shakeit}>\n        <Navbar />\n        <Title>\n          Click on the Pokemon, make sure you don't click the same pokemon twice\n        </Title>\n\n        <p className='score'>\n          <strong>\n            score: {this.state.score} | TopScore: {this.state.topScore}\n          </strong>\n        </p>\n        <p className='message'>\n          <strong>{this.state.message}</strong>\n        </p>\n\n        {this.state.pokemon.map(pokemon => (\n          <PokemonCard\n            handlePicked={this.handlePicked}\n            id={pokemon.id}\n            key={pokemon.id}\n            name={pokemon.name}\n            image={pokemon.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}